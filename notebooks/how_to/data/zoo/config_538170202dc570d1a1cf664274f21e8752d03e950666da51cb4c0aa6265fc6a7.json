{
    "name": "flow_identity",
    "config": {
        "lr": 0.01,
        "weight_decay": 1e-05,
        "max_iter": 1000,
        "criterion": {
            "py/object": "awesome.measures.se.SE",
            "name": null,
            "reduction": "mean",
            "reduction_dim": null
        },
        "x_data": "50e67e31add5ce2e0ce273a945183df9727d4ed9ce668d0f4c7f9be2b53c57d6",
        "batch_size": 1
    },
    "str_repr": "NormNet(\n  (net): PixelizeNet(\n    (network): NormalizingFlow(\n      (q0): Uniform()\n      (flows): ModuleList(\n        (0): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (1): ActNorm()\n        (2): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (3): ActNorm()\n        (4): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (5): ActNorm()\n        (6): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (7): ActNorm()\n        (8): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (9): ActNorm()\n        (10): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (11): ActNorm()\n        (12): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (13): ActNorm()\n        (14): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (15): ActNorm()\n        (16): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (17): ActNorm()\n        (18): MaskedAffineFlow(\n          (s): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n          (t): MLP(\n            (net): Sequential(\n              (0): Linear(in_features=2, out_features=8, bias=True)\n              (1): LeakyReLU(negative_slope=0.0)\n              (2): Linear(in_features=8, out_features=2, bias=True)\n              (3): Tanh()\n            )\n          )\n        )\n        (19): ActNorm()\n      )\n      (p): Uniform()\n    )\n  )\n  (norm): MinMax(dim=(0, 2, 3))\n)",
    "query_hash": "538170202dc570d1a1cf664274f21e8752d03e950666da51cb4c0aa6265fc6a7",
    "state_dict_path": "./state_dict_538170202dc570d1a1cf664274f21e8752d03e950666da51cb4c0aa6265fc6a7.pth",
    "created_at": "2025-03-01T15:01:28.823178+08:00"
}